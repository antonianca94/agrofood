<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= pageTitle %></title>
</head>
<body class="products_edit">
    <%- include('../header') %>
    <div class="main-content d-xxl-flex d-xl-flex d-lg-flex"> 
        <%- include('../sidebar',{ pageType: 'Produtos' }) %>
        <div class="container mb-5 m-4">
            <div class="title-section">
                <div class="d-flex justify-content-start align-items-center mb-4">
                    <h4 class="m-0"><%= pageTitle %></h4>
                </div>
            </div>
            <div class="content-section bg-white bg-body rounded p-4">
                <form id="updateProduct" action="/products/<%= product.id %>" method="post">
                    <div class="row mb-3">
                        <div class="col">
                            <label for="categorias" class="form-label">Selecionar Categoria</label>
                            <select class="form-select" id="categorias" name="categorias">
                                <% const renderCategories = (categories, parentPath = '') => { %>
                                    <% categories.forEach(category => { %>
                                        <!-- Renderiza a opção para a categoria atual -->
                                        <option value="<%= category.id %>" <% if (product.categories_products_id === category.id) { %> selected <% } %>><%= parentPath + category.name %></option>
                                        <!-- Se a categoria tiver filhos, chama recursivamente a função para renderizá-los -->
                                        <% if (category.children && category.children.length) { %>
                                            <% renderCategories(category.children, parentPath + category.name + ' > '); %>
                                        <% } %>
                                    <% }); %>
                                <% } %>
                                <% renderCategories(categoryTree); %>
                            </select>
                            <div class="invalid-feedback" id="categoriasError"></div>
                        </div>
                        <div class="col">
                            <label for="code" class="form-label">Código</label>
                            <input type="text" class="form-control" id="code" name="code" value="<%= product.sku %>" readonly>
                        </div>
                    </div>
                    
                    <div class="row mb-3">
                        <div class="col">
                            <label for="name" class="form-label">Nome:</label>
                            <input type="text" class="form-control" id="name" name="name" value="<%= product.name %>" required>
                        </div>
                        <div class="col">
                            <label for="price" class="form-label">Preço:</label>
                            <input type="text" class="form-control" id="price" name="price" value="<%= product.price %>" required>
                        </div>
                        <div class="col">
                            <label for="price" class="form-label">Quantidade:</label>
                            <input type="number" class="form-control" id="quantity" name="quantity" value="<%= product.quantity %>" required>
                        </div>
                    </div>

                    <div class="row mb-3 mt-5">
                        <div class="col featured_image_content">
                            <label for="featured_image" class="form-label">Imagem Destacada</label>
                            <input type="file" class="form-control" id="featured_image" name="featured_image">
                            <div class="invalid-feedback" id="featured_imageError"></div>
                        </div>
                    </div>

                    <div class="row mb-3 mt-5">
                        <div class="col gallery_images_content">
                            <label for="gallery_images" class="form-label">Galeria de Imagens</label>
                            <div id="image-preview"></div>
                            <input type="file" class="form-control" id="gallery_images" name="gallery_images[]" multiple>
                            <div class="invalid-feedback" id="gallery_imagesError"></div>
                        </div>
                    </div>

                    <div class="mb-4 mt-4">
                        <label for="descricao" class="form-label">Descrição</label>
                        <textarea class="form-control" name="descricao" id="descricao" rows="3"></textarea>
                        <div class="invalid-feedback" id="descricaoError"></div>
                    </div>
                    
                    <button type="submit" class="btn btn-primary">Atualizar</button>
                </form>
                
            </div>
            <!-- FOOTER -->
            <div class="footer">
                <%- include('../footer') %>
            </div>
            <!-- FOOTER -->
        </div>
    </div>
    <script>
    
        $(".products_edit #featured_image").fileinput({
            theme: 'bs5', // Especifique o tema que deseja usar (por exemplo, 'fas' para Font Awesome)
            language: 'pt-BR', // Define o idioma para português do Brasil
            showRemove: true, // Adiciona botão de remoção para cada foto
            showUpload: false, // Define se o botão de upload deve ser exibido
            previewFileType: 'image', // Define o tipo de arquivo que deve ser pré-visualizado (neste caso, imagens)
            allowedFileExtensions: ['jpg', 'jpeg', 'png', 'gif'], // Define as extensões de arquivo permitidas
            browseClass: 'btn btn-primary', // Define a classe do botão de navegação
            browseLabel: 'Selecionar imagens', // Define o rótulo do botão de navegação
            browseIcon: '<i class="bi bi-upload"></i>', // Define o ícone do botão de navegação
            maxFileCount: 1, // Define o número máximo de arquivos permitidos
            validateInitialCount: true, // Define se o número inicial de arquivos deve ser validado
            overwriteInitial: false, // Define se os arquivos iniciais devem ser substituídos
            initialPreviewAsData: true, // Define se as pré-visualizações iniciais devem ser tratadas como dados brutos
            initialPreviewFileType: 'image', // Define o tipo de arquivo para pré-visualizações iniciais
            msgProcessing: 'Processando...', // Personalize o texto de processamento aqui
            initialPreview: [
            '<%= featuredImage.path %>'
            ]
        });


        var galleryImagePaths = JSON.parse('<%- galleryImagePaths %>');


        $(".products_edit #gallery_images").fileinput({
            theme: 'bs5', // Especifique o tema que deseja usar (por exemplo, 'fas' para Font Awesome)
            language: 'pt-BR', // Define o idioma para português do Brasil
            showRemove: true, // Adiciona botão de remoção para cada foto
            showUpload: false, // Define se o botão de upload deve ser exibido
            showUpload: false, // Define se o botão de upload deve ser exibido
            previewFileType: 'image', // Define o tipo de arquivo que deve ser pré-visualizado (neste caso, imagens)
            allowedFileExtensions: ['jpg', 'jpeg', 'png', 'gif'], // Define as extensões de arquivo permitidas
            browseClass: 'btn btn-primary', // Define a classe do botão de navegação
            browseLabel: 'Selecionar imagens', // Define o rótulo do botão de navegação
            browseIcon: '<i class="bi bi-upload"></i>', // Define o ícone do botão de navegação
            maxFileCount: 10, // Define o número máximo de arquivos permitidos
            validateInitialCount: true, // Define se o número inicial de arquivos deve ser validado
            overwriteInitial: false, // Define se os arquivos iniciais devem ser substituídos
            initialPreviewAsData: true, // Define se as pré-visualizações iniciais devem ser tratadas como dados brutos
            initialPreviewFileType: 'image', // Define o tipo de arquivo para pré-visualizações iniciais
            initialPreviewConfig: [
            ],
            msgProcessing: 'Processando...', // Personalize o texto de processamento aqui
            initialPreview: galleryImagePaths 
        });

    </script>
        <!-- Script para inicializar o Select2 -->
</body>
</html>
